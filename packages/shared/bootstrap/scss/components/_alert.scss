@use 'sass:map';
@use '../abstracts/' as *;
@use '../vendors/bootstrap';

.alert {
  --#{$prefix}alert-border-left-color: var(--#{prefix}gray-800);
  --#{$prefix}alert-bg: #{$white};
  --#{$prefix}z-index: 9999;

  display: flex;
  align-items: center;
  overflow: hidden;
  color: var(--#{$prefix}body-color);
  border-color: var(--#{$prefix}alert-border-color);
  border-left: $alert-left-border-width solid
    var(--#{$prefix}alert-border-left-color);

  svg {
    color: var(--#{$prefix}alert-color);
  }

  .alert-content {
    font-size: bootstrap.$small-font-size;
  }

  .alert-progress {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 4px;
    background-color: var(--#{$prefix}alert-border-color);
    transition-property: transform;
    transform: scaleX(0);
    transform-origin: left;
  }

  .btn-close {
    opacity: 1;
    box-sizing: border-box;
    width: 2rem;
    height: 2rem;
  }

  &.is-toast {
    padding-right: 2rem;
    z-index: var(--#{$prefix}z-index);
    min-width: 352px;
    max-width: calc(402px - 2rem);
    box-shadow: var(--#{$prefix}box-shadow);

    @include bootstrap.media-breakpoint-up(xs) {
      width: 100%;
    }
  }

  &.is-confirm {
    position: fixed;
    margin: $spacer-12;
    z-index: var(--#{$prefix}z-index);
    gap: $spacer-0 !important;
    display: flex;
    flex-direction: column;
    align-items: end;
    min-width: 35rem;
    max-width: 60rem;
    border-left: none;
    box-shadow: var(--#{$prefix}box-shadow);

    .alert-content {
      padding-top: $spacer-24;
      padding-inline: $spacer-12;
    }

    .btn-close-container {
      position: absolute;
      top: $spacer-12;
      right: $spacer-12;
    }

    @include bootstrap.media-breakpoint-up(xs) {
      width: 100%;
    }
  }

  &.rgpd {
    @include bootstrap.media-breakpoint-down(md) {
      margin: 0 !important;
    }
  }

  &.is-dismissible {
    .btn-close {
      position: absolute;
      right: $spacer-12;
      top: 50%;
      transform: translateY(-50%);
    }
  }

  &.top-left {
    top: $spacer-0;
    left: $spacer-0;
  }

  &.top-right {
    top: $spacer-0;
    right: $spacer-0;
  }

  &.bottom-left {
    bottom: $spacer-0;
    left: $spacer-0;
  }

  &.bottom-right {
    bottom: $spacer-0;
    right: $spacer-0;
  }
}

@each $state, $key in $support-colors {
  .alert-#{$state} {
    --#{$prefix}alert-color: #{map.get($key, 'base')};
    --#{$prefix}alert-border-color: #{map.get($key, 'pale')};
    --#{$prefix}alert-border-left-color: #{map.get($key, 'base')};
  }
}
