name: Pre-Release
on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Select the branch to run the workflow on'
        required: true
        type: choice
        options:
          - develop
          - develop-rc
          - develop-b2school
          - develop-pedago
          - develop-mozo
          - develop-integration
        default: main
permissions:
  contents: read #  for checkout
jobs:
  pre-release:
    permissions:
      contents: write #  to be able to publish a GitHub release
      issues: write #  to be able to comment on released issues
      pull-requests: write #  to be able to comment on released pull requests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: '0'
          ref: ${{ github.event.inputs.branch }}

      - uses: actions/setup-node@v4
        name: Install Node
        with:
          node-version: 18

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        id: pnpm-install
        with:
          version: 9.4.0
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path | tr -d '\n')" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Generate .npmrc
        run: |
          pnpm config set @edifice.io:registry https://registry.npmjs.org
          pnpm config set //registry.npmjs.org/:_authToken ${{ secrets.NPM_TOKEN }}
          pnpm config set @tiptap-pro:registry https://registry.tiptap.dev
          pnpm config set //registry.tiptap.dev/:_authToken ${{ secrets.TIPTAP_PRO_TOKEN }}
          pnpm config set auto-install-peers true

      - run: pnpm install --no-frozen-lockfile && pnpm build
        name: Install & Build

      - name: Version & Publish
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor}}@users.noreply.github.com"

          echo "Your current branch is ${{ github.event.inputs.branch }}"

          npx lerna publish prerelease --preid ${{ github.event.inputs.branch }} --pre-dist-tag ${{ github.event.inputs.branch }} --yes

        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          TIPTAP_PRO_TOKEN: ${{ secrets.TIPTAP_PRO_TOKEN }}
